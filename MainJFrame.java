/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.sql.*;
import java.awt.Color;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author ajiaa
 */
public class MainJFrame extends javax.swing.JFrame {

    private static String dbURL = "jdbc:derby://localhost:1527/papa [username on USERNAME]";
    private static Connection conn = null;
    private static Statement stmt = null;
    private static ArrayList<Order> masterOrders;
    private static ArrayList<Order> curOrders;
    private static int deckOrder = 0;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        //connect();
        //masterOrders = getMasterOrders();
        //readMasterOrders(masterOrders);
    }

    private static void connect() {
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
        } catch (ClassNotFoundException e){
            System.out.println("No jdbc driver");
            e.printStackTrace();
        }
        try{
            conn = DriverManager.getConnection(dbURL);
        } catch (Exception e){
            System.out.println("Connection error");
        }
        try {
            stmt = conn.createStatement();
        } catch (Exception e){
            System.out.println("Statement error");
        }
    }

    private static void disconnect(){
       try {
            if (stmt != null) {
                stmt.close();
            }
            if (conn != null) {
                DriverManager.getConnection(dbURL + ";shutdown=true");
                conn.close();
            }
        } catch (SQLException e) {
            System.out.println("Shutdown error");
        }
    }

    private static ArrayList<Order> getMasterOrders(){
        ArrayList<Order> record = new ArrayList<>();
        try {
            String query = "SELECT * FROM TEST.NCP";
            Statement st = (Statement) conn.createStatement();
            try (ResultSet rs = st.executeQuery(query)){
                while (rs.next()) {
                    Order c = new Order();
                    c.setId(rs.getInt("id"));
                    c.setName(rs.getString("name"));
                    c.setCloser(rs.getBoolean("closer"));
                    c.setSmall(rs.getBoolean("size"));
                    c.setLarge(!Boolean.valueOf(c.small));
                    c.setFlavor(rs.getString("tea"));
                    c.setSweet(rs.getInt("sugar"));
                    c.setIce(rs.getInt("ice"));
                    c.setAdd(rs.getString("adds"));
                    record.add(c);
                }
            } catch (SQLException e) {
                System.out.println("Retrival error");
                e.printStackTrace();
            }
        } catch (SQLException e) {
            System.out.println("Connection error");
        }
        return record;
    }
/*
    public void readMasterOrders(ArrayList<Order> s){
        for (int i = 0; i < s.size(); i++) {
            String fin = String.valueOf(s.get(i).id) + " "
                    + s.get(i).name + " " 
                    + String.valueOf(s.get(i).closer) + " "
                    + String.valueOf(s.get(i).small) + " "
                    + String.valueOf(s.get(i).large) + " "
                    + s.get(i).flavor + " "
                    + String.valueOf(s.get(i).sweet) + " "
                    + String.valueOf(s.get(i).ice) + " "
                    + s.get(i).add;
            System.out.println(fin);
        }
    }
    */
    public void readMasterOrders(ArrayList<Order> s) {
        
    }

    private static void getRanOrder(){
        Random r = new Random();
        int n = r.nextInt(masterOrders.size());
        System.out.println(n);
        Order chosen = masterOrders.get(n);
        curOrders.add(chosen);
   }

    private static void printOrder(Order x){
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        orderNumField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        smallCheckBox = new javax.swing.JCheckBox();
        largeCheckBox = new javax.swing.JCheckBox();
        flavorField = new javax.swing.JTextField();
        iceField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sweetField = new javax.swing.JTextField();
        addField = new javax.swing.JTextField();
        forwardBtn = new javax.swing.JButton();
        orderBtn = new javax.swing.JButton();
        finBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 204, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.darkGray));

        backBtn.setText("<");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel1.setText("Order #");

        orderNumField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        nameField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        smallCheckBox.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        smallCheckBox.setText("Small");

        largeCheckBox.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        largeCheckBox.setText("Large");

        flavorField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        flavorField.setText("Flavor");

        iceField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        iceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iceFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel3.setText("Ice Level");

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel4.setText("Sweetness");

        sweetField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        addField.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        addField.setText("Toppings");
        addField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFieldActionPerformed(evt);
            }
        });

        forwardBtn.setText(">");
        forwardBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forwardBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(forwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sweetField)
                                            .addComponent(iceField, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(smallCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(largeCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 62, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flavorField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderNumField, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smallCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(largeCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(flavorField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iceField, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sweetField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(18, 18, 18)
                .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        orderBtn.setBackground(new java.awt.Color(255, 166, 158));
        orderBtn.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        orderBtn.setText("Take Order");
        orderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderBtnMouseClicked(evt);
            }
        });

        finBtn.setBackground(new java.awt.Color(255, 166, 158));
        finBtn.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        finBtn.setText("Finish Order");
        finBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finBtnMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(finBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(finBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void forwardBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forwardBtnMouseClicked
        // TODO add your handling code here:
        /*System.out.println("Registered next order button clicked");
        if (curOrders != null) {
            Order temp = curOrders.remove(1);
            curOrders.add(temp);
            deckOrder++;
            orderNumField.setText(String.valueOf(deckOrder));
            smallCheckBox.setEnabled(temp.small);
            largeCheckBox.setEnabled(temp.large);
            flavorField.setText(temp.flavor);
            iceField.setText(String.valueOf(temp.ice));
            sweetField.setText(String.valueOf(temp.sweet));
            addField.setText(temp.add);
        } else {
            System.out.println("No orders to be fulfilled");
        }
    */
        System.out.println("Registered next order button clicked");
        orderNumField.setText("1");
        nameField.setText("Sam");
        smallCheckBox.setSelected(true);
        flavorField.setText("matcha");
        iceField.setText("25");
        sweetField.setText("50");
        addField.setText("hearts");
        
    }//GEN-LAST:event_forwardBtnMouseClicked

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        // TODO add your handling code here:
        /*
        System.out.println("Registered previous order button clicked");
        if (curOrders != null) {
            Order temp = curOrders.remove(1);
            curOrders.add(temp);
            deckOrder--;
            orderNumField.setText(String.valueOf(deckOrder));
            smallCheckBox.setEnabled(temp.small);
            largeCheckBox.setEnabled(temp.large);
            flavorField.setText(temp.flavor);
            iceField.setText(String.valueOf(temp.ice));
            sweetField.setText(String.valueOf(temp.sweet));
            addField.setText(temp.add);
        } else {
            System.out.println("No orders to be fulfilled");
        }
*/
        System.out.println("Registered next order button clicked");
        orderNumField.setText("2");
        nameField.setText("Abby");
        smallCheckBox.setSelected(true);
        flavorField.setText("lemon");
        iceField.setText("75");
        sweetField.setText("50");
        addField.setText("tapioca");
    }//GEN-LAST:event_backBtnMouseClicked

    private void orderBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderBtnMouseClicked
        // TODO add your handling code here:
        System.out.println("Registered get order button clicked");
        getRanOrder();
    }//GEN-LAST:event_orderBtnMouseClicked

    private void finBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finBtnMouseClicked
        // TODO add your handling code here:
        System.out.println("Registered finishe order button clicked");
    }//GEN-LAST:event_finBtnMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new fill1().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFieldActionPerformed

    private void iceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iceFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addField;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton finBtn;
    private javax.swing.JTextField flavorField;
    private javax.swing.JButton forwardBtn;
    private javax.swing.JTextField iceField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox largeCheckBox;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton orderBtn;
    private javax.swing.JTextField orderNumField;
    private javax.swing.JCheckBox smallCheckBox;
    private javax.swing.JTextField sweetField;
    // End of variables declaration//GEN-END:variables
}
